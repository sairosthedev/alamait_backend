openapi: 3.0.0
info:
  title: Alamait Property Management System API
  description: API documentation for the Alamait Property Management System
  version: 1.0.0
  contact:
    name: Alamait Support
    email: macdonaldsairos24@gmail.com

servers:
  - url: https://alamait-backend.onrender.com/api
    description: Production server
  - url: http://localhost:5000/api
    description: Development server

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
        email:
          type: string
          format: email
        firstName:
          type: string
        lastName:
          type: string
        role:
          type: string
          enum: [student, admin, property_manager]
        phone:
          type: string
        applicationCode:
          type: string
        isVerified:
          type: boolean
        emergencyContact:
          type: object
          properties:
            name:
              type: string
            relationship:
              type: string
            phone:
              type: string
        createdAt:
          type: string
          format: date-time
        lastLogin:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Application:
      type: object
      properties:
        _id:
          type: string
        student:
          $ref: '#/components/schemas/User'
        email:
          type: string
          format: email
        firstName:
          type: string
        lastName:
          type: string
        phone:
          type: string
        applicationCode:
          type: string
        requestType:
          type: string
          enum: [new, upgrade]
        status:
          type: string
          enum: [pending, approved, rejected, waitlisted]
        paymentStatus:
          type: string
          enum: [unpaid, paid]
        applicationDate:
          type: string
          format: date-time
        preferredRoom:
          type: string
        alternateRooms:
          type: array
          items:
            type: string
        currentRoom:
          type: string
        requestedRoom:
          type: string
        reason:
          type: string
        allocatedRoom:
          type: string
        waitlistedRoom:
          type: string
        adminComment:
          type: string
        actionDate:
          type: string
          format: date-time
        actionBy:
          $ref: '#/components/schemas/User'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

paths:
  /applications/submit:
    post:
      tags:
        - Public
      summary: Submit a new application
      description: Submit a new application for student accommodation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - firstName
                - lastName
                - email
                - phone
                - preferredRoom
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                  format: email
                phone:
                  type: string
                preferredRoom:
                  type: string
                alternateRooms:
                  type: array
                  items:
                    type: string
      responses:
        '201':
          description: Application submitted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  application:
                    type: object
                    properties:
                      id:
                        type: string
                      status:
                        type: string
                      applicationDate:
                        type: string
                        format: date-time
        '400':
          description: Invalid input
        '500':
          description: Server error

  /applications/status/{email}:
    get:
      tags:
        - Public
      summary: Get application status
      description: Get the status of an application using email
      parameters:
        - in: path
          name: email
          required: true
          schema:
            type: string
            format: email
      responses:
        '200':
          description: Application status retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  applicationDate:
                    type: string
                    format: date-time
                  preferredRoom:
                    type: string
                  applicationCode:
                    type: string
        '404':
          description: Application not found
        '500':
          description: Server error

  /admin/applications:
    get:
      tags:
        - Admin
      summary: Get all applications
      description: Get a list of all applications with room status
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: type
          schema:
            type: string
            enum: [new, upgrade]
        - in: query
          name: status
          schema:
            type: string
            enum: [pending, approved, rejected, waitlisted]
      responses:
        '200':
          description: Applications retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  applications:
                    type: array
                    items:
                      $ref: '#/components/schemas/Application'
                  rooms:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        capacity:
                          type: integer
                        price:
                          type: number
                        status:
                          type: string
                        residenceName:
                          type: string
        '401':
          description: Unauthorized
        '500':
          description: Server error

  /admin/applications/{applicationId}:
    put:
      tags:
        - Admin
      summary: Update application status
      description: Update the status of an application (approve/reject/waitlist)
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: applicationId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - action
              properties:
                action:
                  type: string
                  enum: [approve, reject, waitlist]
                roomNumber:
                  type: string
                  description: Required when action is 'approve'
      responses:
        '200':
          description: Application status updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  application:
                    $ref: '#/components/schemas/Application'
        '400':
          description: Invalid input or action
        '401':
          description: Unauthorized
        '404':
          description: Application not found
        '500':
          description: Server error

  /admin/applications/{applicationId}/payment:
    put:
      tags:
        - Admin
      summary: Update payment status
      description: Update the payment status of an approved application
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: applicationId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Payment status updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
        '400':
          description: Invalid request or application not approved
        '401':
          description: Unauthorized
        '404':
          description: Application not found
        '500':
          description: Server error