// MongoDB Script to Update Existing Vendors
// Copy and paste this entire script into MongoDB Compass or MongoDB shell

// Switch to your database (replace 'alamait_backend' with your actual database name)
use alamait_backend;

print("🔗 Starting vendor update script...");

// 1. Update all existing vendors with missing fields
print("\n📊 Step 1: Updating all existing vendors with missing fields...");

const updateResult = db.vendors.updateMany(
  {
    $or: [
      { vendorType: { $exists: false } },
      { businessScope: { $exists: false } },
      { bankDetails: { $exists: false } },
      { defaultPaymentMethod: { $exists: false } },
      { expenseCategory: { $exists: false } },
      { isAutoGenerated: { $exists: false } }
    ]
  },
  [
    {
      $set: {
        // Add vendorType based on category
        vendorType: {
          $switch: {
            branches: [
              { case: { $in: ["$category", ["supplies", "equipment"]] }, then: "shop" },
              { case: { $in: ["$category", ["maintenance", "cleaning", "security", "landscaping", "electrical", "plumbing", "carpentry", "painting"]] }, then: "contractor" },
              { case: { $eq: ["$category", "services"] }, then: "service_provider" }
            ],
            default: "other"
          }
        },
        // Add businessScope
        businessScope: {
          $concat: [
            {
              $switch: {
                branches: [
                  { case: { $in: ["$category", ["supplies", "equipment"]] }, then: "shop" },
                  { case: { $in: ["$category", ["maintenance", "cleaning", "security", "landscaping", "electrical", "plumbing", "carpentry", "painting"]] }, then: "contractor" },
                  { case: { $eq: ["$category", "services"] }, then: "service_provider" }
                ],
                default: "other"
              }
            },
            " specializing in ",
            { $ifNull: ["$category", "other"] },
            " services/products"
          ]
        },
        // Add bankDetails (null for existing vendors)
        bankDetails: {
          bankName: null,
          accountNumber: null,
          accountType: null,
          branchCode: null,
          swiftCode: null
        },
        // Add defaultPaymentMethod (Cash for existing vendors)
        defaultPaymentMethod: "Cash",
        // Add expenseCategory (convert from expenseAccountCode)
        expenseCategory: {
          $switch: {
            branches: [
              { case: { $eq: ["$expenseAccountCode", "5000"] }, then: "maintenance_expenses" },
              { case: { $eq: ["$expenseAccountCode", "5001"] }, then: "utilities_expenses" },
              { case: { $eq: ["$expenseAccountCode", "5010"] }, then: "cleaning_expenses" },
              { case: { $eq: ["$expenseAccountCode", "5011"] }, then: "security_expenses" },
              { case: { $eq: ["$expenseAccountCode", "5013"] }, then: "other_expenses" }
            ],
            default: "other_expenses"
          }
        },
        // Add isAutoGenerated flag (false for existing vendors)
        isAutoGenerated: false
      }
    }
  ]
);

print(`✅ Updated ${updateResult.modifiedCount} vendors with missing fields`);

// 2. Add bank details to specific vendors
print("\n💳 Step 2: Adding bank details to specific vendors...");

// Trust Jings Electrician
const trustJingsResult = db.vendors.updateOne(
  { businessName: { $regex: /Trust Jings Electrician/i } },
  {
    $set: {
      bankDetails: {
        bankName: "CBZ Bank",
        accountNumber: "1234567890",
        accountType: "Business Account",
        branchCode: "12345",
        swiftCode: "CBZAZW2X"
      },
      defaultPaymentMethod: "Bank Transfer"
    },
    $push: {
      history: {
        action: "Bank details added",
        description: "Added bank details for Trust Jings Electrician",
        timestamp: new Date(),
        changes: [
          "Added bankName: CBZ Bank",
          "Added accountNumber: 1234567890",
          "Updated paymentMethod: Bank Transfer"
        ]
      }
    }
  }
);

if (trustJingsResult.matchedCount > 0) {
  print("✅ Updated Trust Jings Electrician with bank details");
} else {
  print("⚠️  Trust Jings Electrician not found");
}

// Gift Fashu Plumber
const giftFashuResult = db.vendors.updateOne(
  { businessName: { $regex: /Gift Fashu Plumber/i } },
  {
    $set: {
      bankDetails: {
        bankName: "Stanbic Bank",
        accountNumber: "0987654321",
        accountType: "Business Account",
        branchCode: "54321",
        swiftCode: "SBICZMWX"
      },
      defaultPaymentMethod: "Bank Transfer"
    },
    $push: {
      history: {
        action: "Bank details added",
        description: "Added bank details for Gift Fashu Plumber",
        timestamp: new Date(),
        changes: [
          "Added bankName: Stanbic Bank",
          "Added accountNumber: 0987654321",
          "Updated paymentMethod: Bank Transfer"
        ]
      }
    }
  }
);

if (giftFashuResult.matchedCount > 0) {
  print("✅ Updated Gift Fashu Plumber with bank details");
} else {
  print("⚠️  Gift Fashu Plumber not found");
}

// Admire Kumba Electrician
const admireKumbaResult = db.vendors.updateOne(
  { businessName: { $regex: /Admire Kumba Electrician/i } },
  {
    $set: {
      bankDetails: {
        bankName: "NMB Bank",
        accountNumber: "1122334455",
        accountType: "Business Account",
        branchCode: "67890",
        swiftCode: "NMBZZW2X"
      },
      defaultPaymentMethod: "Bank Transfer"
    },
    $push: {
      history: {
        action: "Bank details added",
        description: "Added bank details for Admire Kumba Electrician",
        timestamp: new Date(),
        changes: [
          "Added bankName: NMB Bank",
          "Added accountNumber: 1122334455",
          "Updated paymentMethod: Bank Transfer"
        ]
      }
    }
  }
);

if (admireKumbaResult.matchedCount > 0) {
  print("✅ Updated Admire Kumba Electrician with bank details");
} else {
  print("⚠️  Admire Kumba Electrician not found");
}

// 3. Display summary of all vendors
print("\n📋 Step 3: Displaying all vendors with their updated information...");

const allVendors = db.vendors.find({}).toArray();

print(`\n📊 Total vendors in database: ${allVendors.length}`);

allVendors.forEach((vendor, index) => {
  print(`\n${index + 1}. ${vendor.businessName}:`);
  print(`   Category: ${vendor.category}`);
  print(`   Vendor Type: ${vendor.vendorType || 'Not set'}`);
  print(`   Payment Method: ${vendor.defaultPaymentMethod || 'Not set'}`);
  print(`   Has Bank Details: ${vendor.bankDetails && vendor.bankDetails.bankName ? 'Yes' : 'No'}`);
  print(`   Expense Category: ${vendor.expenseCategory || 'Not set'}`);
  print(`   Auto Generated: ${vendor.isAutoGenerated || false}`);
  
  if (vendor.bankDetails && vendor.bankDetails.bankName) {
    print(`   Bank: ${vendor.bankDetails.bankName}`);
    print(`   Account: ${vendor.bankDetails.accountNumber}`);
  }
});

// 4. Count vendors by payment method
print("\n📈 Step 4: Payment method summary...");

const paymentMethodStats = db.vendors.aggregate([
  {
    $group: {
      _id: "$defaultPaymentMethod",
      count: { $sum: 1 },
      vendors: { $push: "$businessName" }
    }
  }
]).toArray();

paymentMethodStats.forEach(stat => {
  print(`   ${stat._id || 'Not set'}: ${stat.count} vendors`);
  stat.vendors.forEach(vendor => {
    print(`     - ${vendor}`);
  });
});

// 5. Count vendors by vendor type
print("\n🏷️  Step 5: Vendor type summary...");

const vendorTypeStats = db.vendors.aggregate([
  {
    $group: {
      _id: "$vendorType",
      count: { $sum: 1 },
      vendors: { $push: "$businessName" }
    }
  }
]).toArray();

vendorTypeStats.forEach(stat => {
  print(`   ${stat._id || 'Not set'}: ${stat.count} vendors`);
  stat.vendors.forEach(vendor => {
    print(`     - ${vendor}`);
  });
});

print("\n🎉 Vendor update script completed successfully!");
print("All existing vendors have been updated with the new fields:");
print("  ✅ vendorType");
print("  ✅ businessScope");
print("  ✅ bankDetails");
print("  ✅ defaultPaymentMethod");
print("  ✅ expenseCategory");
print("  ✅ isAutoGenerated");
print("\nBank details have been added to specific vendors where applicable."); 